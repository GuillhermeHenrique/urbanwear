generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  name     String
  email    String  @unique
  password String
  image    String?
  admin    Boolean @default(false)

  cart      Cart?
  UserOrder UserOrder[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

enum Category {
  TSHIRT
  SHORTS
  COAT
  PANTS
  SNEAKERS
}

model Product {
  id        String   @id @default(uuid())
  name      String
  category  Category
  price     Decimal  @db.Decimal(10, 2)
  images    String[]
  available Boolean  @default(true)

  cartsItem CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("products")
}

model Cart {
  id String @id @default(uuid())

  items CartItem[]

  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("carts")
}

model CartItem {
  id     String @id @default(uuid())
  amount Int    @default(1)

  order Order?

  cartId String
  cart   Cart   @relation(fields: [cartId], references: [id], onDelete: Cascade)

  productId String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([cartId, productId])
  @@map("cart_items")
}

model UserOrder {
  id           String  @id @default(uuid())
  name         String
  email        String
  cpf          String
  phone        String
  cep          String
  address      String
  number       Int
  complement   String?
  neighborhood String
  city         String
  state        String

  order Order[]

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("user_orders")
}

model Order {
  id String @id @default(uuid())

  cartItemId String   @unique
  cartItem   CartItem @relation(fields: [cartItemId], references: [id], onDelete: Cascade)

  userOrderId String
  userOrder   UserOrder @relation(fields: [userOrderId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())

  @@map("orders")
}
